from collections import deque
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def deepestLeavesSum(self, root: Optional[TreeNode]) -> int:
        q = deque()
        q.append(root)
        sol=0
        while True:
            l=[]
            sol=0
            while q:
                node=q.popleft()
                sol+=node.val
                if node.left:
                    l.append(node.left)
                if node.right:
                    l.append(node.right)
            if len(l)==0:
                break
            for i in l:
                q.append(i)
        return sol
