from collections import deque
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def searchBST(self, root: Optional[TreeNode], val: int) -> Optional[TreeNode]:
        q = deque()
        q.append(root)
        while q:
            node = q.popleft()
            if node==None:
                continue
            if node.val == val:
                return node
            elif node.val<val:
                q.append(node.right)
            else:
                q.append(node.left) 
        return None
